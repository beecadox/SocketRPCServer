/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _SD1_H_RPCGEN
#define _SD1_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif


struct N_array {
	struct {
		u_int N_len;
		int *N_val;
	} N;
};
typedef struct N_array N_array;

struct min_max {
	int minmax[2];
};
typedef struct min_max min_max;

struct a_N_array {
	float a;
	struct {
		u_int N_len;
		int *N_val;
	} N;
};
typedef struct a_N_array a_N_array;

struct nProd {
	struct {
		u_int product_len;
		float *product_val;
	} product;
};
typedef struct nProd nProd;

#define FUNC_PROG 0x23451111
#define FUNC_VERS 1

#if defined(__STDC__) || defined(__cplusplus)
#define averagefunc 1
extern  float * averagefunc_1(N_array *, CLIENT *);
extern  float * averagefunc_1_svc(N_array *, struct svc_req *);
#define minmaxfunc 2
extern  min_max * minmaxfunc_1(N_array *, CLIENT *);
extern  min_max * minmaxfunc_1_svc(N_array *, struct svc_req *);
#define productfunc 3
extern  nProd * productfunc_1(a_N_array *, CLIENT *);
extern  nProd * productfunc_1_svc(a_N_array *, struct svc_req *);
extern int func_prog_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define averagefunc 1
extern  float * averagefunc_1();
extern  float * averagefunc_1_svc();
#define minmaxfunc 2
extern  min_max * minmaxfunc_1();
extern  min_max * minmaxfunc_1_svc();
#define productfunc 3
extern  nProd * productfunc_1();
extern  nProd * productfunc_1_svc();
extern int func_prog_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_N_array (XDR *, N_array*);
extern  bool_t xdr_min_max (XDR *, min_max*);
extern  bool_t xdr_a_N_array (XDR *, a_N_array*);
extern  bool_t xdr_nProd (XDR *, nProd*);

#else /* K&R C */
extern bool_t xdr_N_array ();
extern bool_t xdr_min_max ();
extern bool_t xdr_a_N_array ();
extern bool_t xdr_nProd ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_SD1_H_RPCGEN */
